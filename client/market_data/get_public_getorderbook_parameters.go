// Code generated by go-swagger; DO NOT EDIT.

package market_data

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPublicGetorderbookParams creates a new GetPublicGetorderbookParams object
// with the default values initialized.
func NewGetPublicGetorderbookParams() *GetPublicGetorderbookParams {
	var ()
	return &GetPublicGetorderbookParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPublicGetorderbookParamsWithTimeout creates a new GetPublicGetorderbookParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPublicGetorderbookParamsWithTimeout(timeout time.Duration) *GetPublicGetorderbookParams {
	var ()
	return &GetPublicGetorderbookParams{

		timeout: timeout,
	}
}

// NewGetPublicGetorderbookParamsWithContext creates a new GetPublicGetorderbookParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPublicGetorderbookParamsWithContext(ctx context.Context) *GetPublicGetorderbookParams {
	var ()
	return &GetPublicGetorderbookParams{

		Context: ctx,
	}
}

// NewGetPublicGetorderbookParamsWithHTTPClient creates a new GetPublicGetorderbookParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPublicGetorderbookParamsWithHTTPClient(client *http.Client) *GetPublicGetorderbookParams {
	var ()
	return &GetPublicGetorderbookParams{
		HTTPClient: client,
	}
}

/*GetPublicGetorderbookParams contains all the parameters to send to the API endpoint
for the get public getorderbook operation typically these are written to a http.Request
*/
type GetPublicGetorderbookParams struct {

	/*Depth
	  The number of entries to return for bids and asks.

	*/
	Depth *float64
	/*Instrument
	  The instrument name for which to retrieve the order book.

	*/
	Instrument string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get public getorderbook params
func (o *GetPublicGetorderbookParams) WithTimeout(timeout time.Duration) *GetPublicGetorderbookParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get public getorderbook params
func (o *GetPublicGetorderbookParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get public getorderbook params
func (o *GetPublicGetorderbookParams) WithContext(ctx context.Context) *GetPublicGetorderbookParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get public getorderbook params
func (o *GetPublicGetorderbookParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get public getorderbook params
func (o *GetPublicGetorderbookParams) WithHTTPClient(client *http.Client) *GetPublicGetorderbookParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get public getorderbook params
func (o *GetPublicGetorderbookParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepth adds the depth to the get public getorderbook params
func (o *GetPublicGetorderbookParams) WithDepth(depth *float64) *GetPublicGetorderbookParams {
	o.SetDepth(depth)
	return o
}

// SetDepth adds the depth to the get public getorderbook params
func (o *GetPublicGetorderbookParams) SetDepth(depth *float64) {
	o.Depth = depth
}

// WithInstrument adds the instrument to the get public getorderbook params
func (o *GetPublicGetorderbookParams) WithInstrument(instrument string) *GetPublicGetorderbookParams {
	o.SetInstrument(instrument)
	return o
}

// SetInstrument adds the instrument to the get public getorderbook params
func (o *GetPublicGetorderbookParams) SetInstrument(instrument string) {
	o.Instrument = instrument
}

// WriteToRequest writes these params to a swagger request
func (o *GetPublicGetorderbookParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Depth != nil {

		// query param depth
		var qrDepth float64
		if o.Depth != nil {
			qrDepth = *o.Depth
		}
		qDepth := swag.FormatFloat64(qrDepth)
		if qDepth != "" {
			if err := r.SetQueryParam("depth", qDepth); err != nil {
				return err
			}
		}

	}

	// query param instrument
	qrInstrument := o.Instrument
	qInstrument := qrInstrument
	if qInstrument != "" {
		if err := r.SetQueryParam("instrument", qInstrument); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
