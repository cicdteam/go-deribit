// Code generated by go-swagger; DO NOT EDIT.

package private

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPrivateToggleNotificationsFromSubaccountParams creates a new GetPrivateToggleNotificationsFromSubaccountParams object
// with the default values initialized.
func NewGetPrivateToggleNotificationsFromSubaccountParams() *GetPrivateToggleNotificationsFromSubaccountParams {
	var ()
	return &GetPrivateToggleNotificationsFromSubaccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrivateToggleNotificationsFromSubaccountParamsWithTimeout creates a new GetPrivateToggleNotificationsFromSubaccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrivateToggleNotificationsFromSubaccountParamsWithTimeout(timeout time.Duration) *GetPrivateToggleNotificationsFromSubaccountParams {
	var ()
	return &GetPrivateToggleNotificationsFromSubaccountParams{

		timeout: timeout,
	}
}

// NewGetPrivateToggleNotificationsFromSubaccountParamsWithContext creates a new GetPrivateToggleNotificationsFromSubaccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrivateToggleNotificationsFromSubaccountParamsWithContext(ctx context.Context) *GetPrivateToggleNotificationsFromSubaccountParams {
	var ()
	return &GetPrivateToggleNotificationsFromSubaccountParams{

		Context: ctx,
	}
}

// NewGetPrivateToggleNotificationsFromSubaccountParamsWithHTTPClient creates a new GetPrivateToggleNotificationsFromSubaccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrivateToggleNotificationsFromSubaccountParamsWithHTTPClient(client *http.Client) *GetPrivateToggleNotificationsFromSubaccountParams {
	var ()
	return &GetPrivateToggleNotificationsFromSubaccountParams{
		HTTPClient: client,
	}
}

/*GetPrivateToggleNotificationsFromSubaccountParams contains all the parameters to send to the API endpoint
for the get private toggle notifications from subaccount operation typically these are written to a http.Request
*/
type GetPrivateToggleNotificationsFromSubaccountParams struct {

	/*Sid
	  The user id for the subaccount

	*/
	Sid int64
	/*State
	  enable (`true`) or disable (`false`) notifications

	*/
	State bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WithTimeout(timeout time.Duration) *GetPrivateToggleNotificationsFromSubaccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WithContext(ctx context.Context) *GetPrivateToggleNotificationsFromSubaccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WithHTTPClient(client *http.Client) *GetPrivateToggleNotificationsFromSubaccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSid adds the sid to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WithSid(sid int64) *GetPrivateToggleNotificationsFromSubaccountParams {
	o.SetSid(sid)
	return o
}

// SetSid adds the sid to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) SetSid(sid int64) {
	o.Sid = sid
}

// WithState adds the state to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WithState(state bool) *GetPrivateToggleNotificationsFromSubaccountParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the get private toggle notifications from subaccount params
func (o *GetPrivateToggleNotificationsFromSubaccountParams) SetState(state bool) {
	o.State = state
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateToggleNotificationsFromSubaccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param sid
	qrSid := o.Sid
	qSid := swag.FormatInt64(qrSid)
	if qSid != "" {
		if err := r.SetQueryParam("sid", qSid); err != nil {
			return err
		}
	}

	// query param state
	qrState := o.State
	qState := swag.FormatBool(qrState)
	if qState != "" {
		if err := r.SetQueryParam("state", qState); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
