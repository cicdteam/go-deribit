// Code generated by go-swagger; DO NOT EDIT.

package private

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPrivateDisableTfaForSubaccountParams creates a new GetPrivateDisableTfaForSubaccountParams object
// with the default values initialized.
func NewGetPrivateDisableTfaForSubaccountParams() *GetPrivateDisableTfaForSubaccountParams {
	var ()
	return &GetPrivateDisableTfaForSubaccountParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrivateDisableTfaForSubaccountParamsWithTimeout creates a new GetPrivateDisableTfaForSubaccountParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrivateDisableTfaForSubaccountParamsWithTimeout(timeout time.Duration) *GetPrivateDisableTfaForSubaccountParams {
	var ()
	return &GetPrivateDisableTfaForSubaccountParams{

		timeout: timeout,
	}
}

// NewGetPrivateDisableTfaForSubaccountParamsWithContext creates a new GetPrivateDisableTfaForSubaccountParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrivateDisableTfaForSubaccountParamsWithContext(ctx context.Context) *GetPrivateDisableTfaForSubaccountParams {
	var ()
	return &GetPrivateDisableTfaForSubaccountParams{

		Context: ctx,
	}
}

// NewGetPrivateDisableTfaForSubaccountParamsWithHTTPClient creates a new GetPrivateDisableTfaForSubaccountParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrivateDisableTfaForSubaccountParamsWithHTTPClient(client *http.Client) *GetPrivateDisableTfaForSubaccountParams {
	var ()
	return &GetPrivateDisableTfaForSubaccountParams{
		HTTPClient: client,
	}
}

/*GetPrivateDisableTfaForSubaccountParams contains all the parameters to send to the API endpoint
for the get private disable tfa for subaccount operation typically these are written to a http.Request
*/
type GetPrivateDisableTfaForSubaccountParams struct {

	/*Sid
	  The user id for the subaccount

	*/
	Sid int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) WithTimeout(timeout time.Duration) *GetPrivateDisableTfaForSubaccountParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) WithContext(ctx context.Context) *GetPrivateDisableTfaForSubaccountParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) WithHTTPClient(client *http.Client) *GetPrivateDisableTfaForSubaccountParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSid adds the sid to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) WithSid(sid int64) *GetPrivateDisableTfaForSubaccountParams {
	o.SetSid(sid)
	return o
}

// SetSid adds the sid to the get private disable tfa for subaccount params
func (o *GetPrivateDisableTfaForSubaccountParams) SetSid(sid int64) {
	o.Sid = sid
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateDisableTfaForSubaccountParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param sid
	qrSid := o.Sid
	qSid := swag.FormatInt64(qrSid)
	if qSid != "" {
		if err := r.SetQueryParam("sid", qSid); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
