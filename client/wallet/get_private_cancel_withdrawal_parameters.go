// Code generated by go-swagger; DO NOT EDIT.

package wallet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPrivateCancelWithdrawalParams creates a new GetPrivateCancelWithdrawalParams object
// with the default values initialized.
func NewGetPrivateCancelWithdrawalParams() *GetPrivateCancelWithdrawalParams {
	var ()
	return &GetPrivateCancelWithdrawalParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrivateCancelWithdrawalParamsWithTimeout creates a new GetPrivateCancelWithdrawalParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrivateCancelWithdrawalParamsWithTimeout(timeout time.Duration) *GetPrivateCancelWithdrawalParams {
	var ()
	return &GetPrivateCancelWithdrawalParams{

		timeout: timeout,
	}
}

// NewGetPrivateCancelWithdrawalParamsWithContext creates a new GetPrivateCancelWithdrawalParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrivateCancelWithdrawalParamsWithContext(ctx context.Context) *GetPrivateCancelWithdrawalParams {
	var ()
	return &GetPrivateCancelWithdrawalParams{

		Context: ctx,
	}
}

// NewGetPrivateCancelWithdrawalParamsWithHTTPClient creates a new GetPrivateCancelWithdrawalParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrivateCancelWithdrawalParamsWithHTTPClient(client *http.Client) *GetPrivateCancelWithdrawalParams {
	var ()
	return &GetPrivateCancelWithdrawalParams{
		HTTPClient: client,
	}
}

/*GetPrivateCancelWithdrawalParams contains all the parameters to send to the API endpoint
for the get private cancel withdrawal operation typically these are written to a http.Request
*/
type GetPrivateCancelWithdrawalParams struct {

	/*Currency
	  The currency symbol

	*/
	Currency string
	/*ID
	  The withdrawal id

	*/
	ID float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) WithTimeout(timeout time.Duration) *GetPrivateCancelWithdrawalParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) WithContext(ctx context.Context) *GetPrivateCancelWithdrawalParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) WithHTTPClient(client *http.Client) *GetPrivateCancelWithdrawalParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCurrency adds the currency to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) WithCurrency(currency string) *GetPrivateCancelWithdrawalParams {
	o.SetCurrency(currency)
	return o
}

// SetCurrency adds the currency to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) SetCurrency(currency string) {
	o.Currency = currency
}

// WithID adds the id to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) WithID(id float64) *GetPrivateCancelWithdrawalParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get private cancel withdrawal params
func (o *GetPrivateCancelWithdrawalParams) SetID(id float64) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateCancelWithdrawalParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param currency
	qrCurrency := o.Currency
	qCurrency := qrCurrency
	if qCurrency != "" {
		if err := r.SetQueryParam("currency", qCurrency); err != nil {
			return err
		}
	}

	// query param id
	qrID := o.ID
	qID := swag.FormatFloat64(qrID)
	if qID != "" {
		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
