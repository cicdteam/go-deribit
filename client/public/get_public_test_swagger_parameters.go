// Code generated by go-swagger; DO NOT EDIT.

package public

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPublicTestParams creates a new GetPublicTestParams object
// with the default values initialized.
func NewGetPublicTestParams() *GetPublicTestParams {
	var ()
	return &GetPublicTestParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPublicTestParamsWithTimeout creates a new GetPublicTestParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPublicTestParamsWithTimeout(timeout time.Duration) *GetPublicTestParams {
	var ()
	return &GetPublicTestParams{

		timeout: timeout,
	}
}

// NewGetPublicTestParamsWithContext creates a new GetPublicTestParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPublicTestParamsWithContext(ctx context.Context) *GetPublicTestParams {
	var ()
	return &GetPublicTestParams{

		Context: ctx,
	}
}

// NewGetPublicTestParamsWithHTTPClient creates a new GetPublicTestParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPublicTestParamsWithHTTPClient(client *http.Client) *GetPublicTestParams {
	var ()
	return &GetPublicTestParams{
		HTTPClient: client,
	}
}

/*GetPublicTestParams contains all the parameters to send to the API endpoint
for the get public test operation typically these are written to a http.Request
*/
type GetPublicTestParams struct {

	/*ExpectedResult
	  The value "exception" will trigger an error response. This may be useful for testing wrapper libraries.

	*/
	ExpectedResult *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get public test params
func (o *GetPublicTestParams) WithTimeout(timeout time.Duration) *GetPublicTestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get public test params
func (o *GetPublicTestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get public test params
func (o *GetPublicTestParams) WithContext(ctx context.Context) *GetPublicTestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get public test params
func (o *GetPublicTestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get public test params
func (o *GetPublicTestParams) WithHTTPClient(client *http.Client) *GetPublicTestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get public test params
func (o *GetPublicTestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpectedResult adds the expectedResult to the get public test params
func (o *GetPublicTestParams) WithExpectedResult(expectedResult *string) *GetPublicTestParams {
	o.SetExpectedResult(expectedResult)
	return o
}

// SetExpectedResult adds the expectedResult to the get public test params
func (o *GetPublicTestParams) SetExpectedResult(expectedResult *string) {
	o.ExpectedResult = expectedResult
}

// WriteToRequest writes these params to a swagger request
func (o *GetPublicTestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExpectedResult != nil {

		// query param expected_result
		var qrExpectedResult string
		if o.ExpectedResult != nil {
			qrExpectedResult = *o.ExpectedResult
		}
		qExpectedResult := qrExpectedResult
		if qExpectedResult != "" {
			if err := r.SetQueryParam("expected_result", qExpectedResult); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
