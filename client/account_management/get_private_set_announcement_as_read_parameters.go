// Code generated by go-swagger; DO NOT EDIT.

package account_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPrivateSetAnnouncementAsReadParams creates a new GetPrivateSetAnnouncementAsReadParams object
// with the default values initialized.
func NewGetPrivateSetAnnouncementAsReadParams() *GetPrivateSetAnnouncementAsReadParams {
	var ()
	return &GetPrivateSetAnnouncementAsReadParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPrivateSetAnnouncementAsReadParamsWithTimeout creates a new GetPrivateSetAnnouncementAsReadParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPrivateSetAnnouncementAsReadParamsWithTimeout(timeout time.Duration) *GetPrivateSetAnnouncementAsReadParams {
	var ()
	return &GetPrivateSetAnnouncementAsReadParams{

		timeout: timeout,
	}
}

// NewGetPrivateSetAnnouncementAsReadParamsWithContext creates a new GetPrivateSetAnnouncementAsReadParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPrivateSetAnnouncementAsReadParamsWithContext(ctx context.Context) *GetPrivateSetAnnouncementAsReadParams {
	var ()
	return &GetPrivateSetAnnouncementAsReadParams{

		Context: ctx,
	}
}

// NewGetPrivateSetAnnouncementAsReadParamsWithHTTPClient creates a new GetPrivateSetAnnouncementAsReadParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPrivateSetAnnouncementAsReadParamsWithHTTPClient(client *http.Client) *GetPrivateSetAnnouncementAsReadParams {
	var ()
	return &GetPrivateSetAnnouncementAsReadParams{
		HTTPClient: client,
	}
}

/*GetPrivateSetAnnouncementAsReadParams contains all the parameters to send to the API endpoint
for the get private set announcement as read operation typically these are written to a http.Request
*/
type GetPrivateSetAnnouncementAsReadParams struct {

	/*AnnouncementID
	  the ID of the announcement

	*/
	AnnouncementID float64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) WithTimeout(timeout time.Duration) *GetPrivateSetAnnouncementAsReadParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) WithContext(ctx context.Context) *GetPrivateSetAnnouncementAsReadParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) WithHTTPClient(client *http.Client) *GetPrivateSetAnnouncementAsReadParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAnnouncementID adds the announcementID to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) WithAnnouncementID(announcementID float64) *GetPrivateSetAnnouncementAsReadParams {
	o.SetAnnouncementID(announcementID)
	return o
}

// SetAnnouncementID adds the announcementId to the get private set announcement as read params
func (o *GetPrivateSetAnnouncementAsReadParams) SetAnnouncementID(announcementID float64) {
	o.AnnouncementID = announcementID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPrivateSetAnnouncementAsReadParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param announcement_id
	qrAnnouncementID := o.AnnouncementID
	qAnnouncementID := swag.FormatFloat64(qrAnnouncementID)
	if qAnnouncementID != "" {
		if err := r.SetQueryParam("announcement_id", qAnnouncementID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
