// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PrivateGetWithdrawalsResponse private get withdrawals response
//
// swagger:model private_get_withdrawals_response
type PrivateGetWithdrawalsResponse struct {

	// result
	// Required: true
	Result *PrivateGetWithdrawalsResponseResult `json:"result"`
}

// Validate validates this private get withdrawals response
func (m *PrivateGetWithdrawalsResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PrivateGetWithdrawalsResponse) validateResult(formats strfmt.Registry) error {

	if err := validate.Required("result", "body", m.Result); err != nil {
		return err
	}

	if m.Result != nil {
		if err := m.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PrivateGetWithdrawalsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrivateGetWithdrawalsResponse) UnmarshalBinary(b []byte) error {
	var res PrivateGetWithdrawalsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PrivateGetWithdrawalsResponseResult private get withdrawals response result
//
// swagger:model PrivateGetWithdrawalsResponseResult
type PrivateGetWithdrawalsResponseResult struct {

	// count
	// Required: true
	Count ResultCount `json:"count"`

	// data
	// Required: true
	Data []*Withdrawal `json:"data"`
}

// Validate validates this private get withdrawals response result
func (m *PrivateGetWithdrawalsResponseResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PrivateGetWithdrawalsResponseResult) validateCount(formats strfmt.Registry) error {

	if err := m.Count.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("result" + "." + "count")
		}
		return err
	}

	return nil
}

func (m *PrivateGetWithdrawalsResponseResult) validateData(formats strfmt.Registry) error {

	if err := validate.Required("result"+"."+"data", "body", m.Data); err != nil {
		return err
	}

	for i := 0; i < len(m.Data); i++ {
		if swag.IsZero(m.Data[i]) { // not required
			continue
		}

		if m.Data[i] != nil {
			if err := m.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("result" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PrivateGetWithdrawalsResponseResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PrivateGetWithdrawalsResponseResult) UnmarshalBinary(b []byte) error {
	var res PrivateGetWithdrawalsResponseResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
