// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// WalletAddressType Address type/purpose, allowed values : `deposit`, `withdrawal`, `transfer`
//
// swagger:model wallet_address_type
type WalletAddressType string

const (

	// WalletAddressTypeDeposit captures enum value "deposit"
	WalletAddressTypeDeposit WalletAddressType = "deposit"

	// WalletAddressTypeWithdrawal captures enum value "withdrawal"
	WalletAddressTypeWithdrawal WalletAddressType = "withdrawal"

	// WalletAddressTypeTransfer captures enum value "transfer"
	WalletAddressTypeTransfer WalletAddressType = "transfer"
)

// for schema
var walletAddressTypeEnum []interface{}

func init() {
	var res []WalletAddressType
	if err := json.Unmarshal([]byte(`["deposit","withdrawal","transfer"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		walletAddressTypeEnum = append(walletAddressTypeEnum, v)
	}
}

func (m WalletAddressType) validateWalletAddressTypeEnum(path, location string, value WalletAddressType) error {
	if err := validate.EnumCase(path, location, value, walletAddressTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this wallet address type
func (m WalletAddressType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateWalletAddressTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
