// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BookState The state of the order book. Possible values are `open` and `closed`.
//
// swagger:model book_state
type BookState string

const (

	// BookStateOpen captures enum value "open"
	BookStateOpen BookState = "open"

	// BookStateClosed captures enum value "closed"
	BookStateClosed BookState = "closed"
)

// for schema
var bookStateEnum []interface{}

func init() {
	var res []BookState
	if err := json.Unmarshal([]byte(`["open","closed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		bookStateEnum = append(bookStateEnum, v)
	}
}

func (m BookState) validateBookStateEnum(path, location string, value BookState) error {
	if err := validate.EnumCase(path, location, value, bookStateEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this book state
func (m BookState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBookStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
