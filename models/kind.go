// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Kind Instrument kind, `"future"` or `"option"`
//
// swagger:model kind
type Kind string

const (

	// KindFuture captures enum value "future"
	KindFuture Kind = "future"

	// KindOption captures enum value "option"
	KindOption Kind = "option"
)

// for schema
var kindEnum []interface{}

func init() {
	var res []Kind
	if err := json.Unmarshal([]byte(`["future","option"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		kindEnum = append(kindEnum, v)
	}
}

func (m Kind) validateKindEnum(path, location string, value Kind) error {
	if err := validate.EnumCase(path, location, value, kindEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this kind
func (m Kind) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateKindEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
