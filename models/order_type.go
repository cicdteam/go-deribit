// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// OrderType order type, `"limit"`, `"market"`, `"stop_limit"`, `"stop_market"`
//
// swagger:model order_type
type OrderType string

const (

	// OrderTypeMarket captures enum value "market"
	OrderTypeMarket OrderType = "market"

	// OrderTypeLimit captures enum value "limit"
	OrderTypeLimit OrderType = "limit"

	// OrderTypeStopMarket captures enum value "stop_market"
	OrderTypeStopMarket OrderType = "stop_market"

	// OrderTypeStopLimit captures enum value "stop_limit"
	OrderTypeStopLimit OrderType = "stop_limit"
)

// for schema
var orderTypeEnum []interface{}

func init() {
	var res []OrderType
	if err := json.Unmarshal([]byte(`["market","limit","stop_market","stop_limit"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		orderTypeEnum = append(orderTypeEnum, v)
	}
}

func (m OrderType) validateOrderTypeEnum(path, location string, value OrderType) error {
	if err := validate.EnumCase(path, location, value, orderTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this order type
func (m OrderType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOrderTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
