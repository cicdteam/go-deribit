// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// IndexName Index identifier, matches (base) cryptocurrency with quote currency
//
// swagger:model index_name
type IndexName string

const (

	// IndexNameBtcUsd captures enum value "btc_usd"
	IndexNameBtcUsd IndexName = "btc_usd"

	// IndexNameEthUsd captures enum value "eth_usd"
	IndexNameEthUsd IndexName = "eth_usd"
)

// for schema
var indexNameEnum []interface{}

func init() {
	var res []IndexName
	if err := json.Unmarshal([]byte(`["btc_usd","eth_usd"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		indexNameEnum = append(indexNameEnum, v)
	}
}

func (m IndexName) validateIndexNameEnum(path, location string, value IndexName) error {
	if err := validate.EnumCase(path, location, value, indexNameEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this index name
func (m IndexName) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateIndexNameEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
