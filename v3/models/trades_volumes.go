// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TradesVolumes trades volumes
//
// swagger:model trades_volumes
type TradesVolumes struct {

	// Total 24h trade volume for call options. This is expressed in the base currency, e.g. BTC for `btc_usd`
	// Required: true
	CallsVolume *float64 `json:"calls_volume"`

	// currency pair
	// Required: true
	CurrencyPair CurrencyPair `json:"currency_pair"`

	// Total 24h trade volume for futures. This is expressed in the base currency, e.g. BTC for `btc_usd`
	// Required: true
	FuturesVolume *float64 `json:"futures_volume"`

	// Total 24h trade volume for put options. This is expressed in the base currency, e.g. BTC for `btc_usd`
	// Required: true
	PutsVolume *float64 `json:"puts_volume"`
}

// Validate validates this trades volumes
func (m *TradesVolumes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallsVolume(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrencyPair(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFuturesVolume(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePutsVolume(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TradesVolumes) validateCallsVolume(formats strfmt.Registry) error {

	if err := validate.Required("calls_volume", "body", m.CallsVolume); err != nil {
		return err
	}

	return nil
}

func (m *TradesVolumes) validateCurrencyPair(formats strfmt.Registry) error {

	if err := m.CurrencyPair.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("currency_pair")
		}
		return err
	}

	return nil
}

func (m *TradesVolumes) validateFuturesVolume(formats strfmt.Registry) error {

	if err := validate.Required("futures_volume", "body", m.FuturesVolume); err != nil {
		return err
	}

	return nil
}

func (m *TradesVolumes) validatePutsVolume(formats strfmt.Registry) error {

	if err := validate.Required("puts_volume", "body", m.PutsVolume); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TradesVolumes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TradesVolumes) UnmarshalBinary(b []byte) error {
	var res TradesVolumes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
