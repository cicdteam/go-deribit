// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublicGetFooterResponse public get footer response
//
// swagger:model public_get_footer_response
type PublicGetFooterResponse struct {
	BaseMessage

	// result
	// Required: true
	Result []*PublicGetFooterResponseResultItems0 `json:"result"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *PublicGetFooterResponse) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 BaseMessage
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.BaseMessage = aO0

	// AO1
	var dataAO1 struct {
		Result []*PublicGetFooterResponseResultItems0 `json:"result"`
	}
	if err := swag.ReadJSON(raw, &dataAO1); err != nil {
		return err
	}

	m.Result = dataAO1.Result

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m PublicGetFooterResponse) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	aO0, err := swag.WriteJSON(m.BaseMessage)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)
	var dataAO1 struct {
		Result []*PublicGetFooterResponseResultItems0 `json:"result"`
	}

	dataAO1.Result = m.Result

	jsonDataAO1, errAO1 := swag.WriteJSON(dataAO1)
	if errAO1 != nil {
		return nil, errAO1
	}
	_parts = append(_parts, jsonDataAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this public get footer response
func (m *PublicGetFooterResponse) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with BaseMessage
	if err := m.BaseMessage.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublicGetFooterResponse) validateResult(formats strfmt.Registry) error {

	if err := validate.Required("result", "body", m.Result); err != nil {
		return err
	}

	for i := 0; i < len(m.Result); i++ {
		if swag.IsZero(m.Result[i]) { // not required
			continue
		}

		if m.Result[i] != nil {
			if err := m.Result[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("result" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublicGetFooterResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicGetFooterResponse) UnmarshalBinary(b []byte) error {
	var res PublicGetFooterResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// PublicGetFooterResponseResultItems0 public get footer response result items0
//
// swagger:model PublicGetFooterResponseResultItems0
type PublicGetFooterResponseResultItems0 struct {

	// name
	// Required: true
	Name *string `json:"name"`

	// title en
	// Required: true
	TitleEn *string `json:"title_en"`

	// title ja
	TitleJa string `json:"title_ja,omitempty"`

	// title ko
	TitleKo string `json:"title_ko,omitempty"`

	// title ru
	TitleRu string `json:"title_ru,omitempty"`

	// title zh
	TitleZh string `json:"title_zh,omitempty"`

	// type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this public get footer response result items0
func (m *PublicGetFooterResponseResultItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTitleEn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublicGetFooterResponseResultItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *PublicGetFooterResponseResultItems0) validateTitleEn(formats strfmt.Registry) error {

	if err := validate.Required("title_en", "body", m.TitleEn); err != nil {
		return err
	}

	return nil
}

func (m *PublicGetFooterResponseResultItems0) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublicGetFooterResponseResultItems0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublicGetFooterResponseResultItems0) UnmarshalBinary(b []byte) error {
	var res PublicGetFooterResponseResultItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
