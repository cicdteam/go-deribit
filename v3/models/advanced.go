// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Advanced advanced type: `"usd"` or `"implv"` (Only for options; field is omitted if not applicable).
//
//
// swagger:model advanced
type Advanced string

const (

	// AdvancedUsd captures enum value "usd"
	AdvancedUsd Advanced = "usd"

	// AdvancedImplv captures enum value "implv"
	AdvancedImplv Advanced = "implv"
)

// for schema
var advancedEnum []interface{}

func init() {
	var res []Advanced
	if err := json.Unmarshal([]byte(`["usd","implv"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		advancedEnum = append(advancedEnum, v)
	}
}

func (m Advanced) validateAdvancedEnum(path, location string, value Advanced) error {
	if err := validate.EnumCase(path, location, value, advancedEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this advanced
func (m Advanced) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAdvancedEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
